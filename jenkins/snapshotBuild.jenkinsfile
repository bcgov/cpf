properties([
  parameters([
    string(
      name: 'versionBase',
      defaultValue: '6.0',
      description: 'The base version number with Major.Minor (e.g. 2.1)',
      trim: true
    ),
    string(
      name: 'versionPatch',
      defaultValue: '0',
      description: 'The version number patch (e.g. 0 or 1)',
      trim: true
    )
  ])
])

def versionNumber="${versionBase}.${versionPatch}"
def dependencyBranch="cpf/${versionBase}.x"
def version="${versionNumber}-SNAPSHOT"
def versionPrefix="0.CPF"

def gitCheckoutReference(pullUrl, refName) {
  deleteDir()
  checkout([
    $class: 'GitSCM',
    branches: [[name: refName]],
    doGenerateSubmoduleConfigurations: false,
    extensions: [],
    gitTool: 'Default',
    submoduleCfg: [],
    userRemoteConfigs: [[url: pullUrl]]
  ])
}

def mavenDeploy() {
  def artifactoryServer = Artifactory.server 'prod'
  def releaseRepo = 'cpf-release-local'
  def snapshotRepo = 'cpf-snapshot-local'
  
  def mavenRuntime = Artifactory.newMavenBuild()
  mavenRuntime.tool = 'm3' 
  mavenRuntime.deployer releaseRepo: releaseRepo, snapshotRepo: snapshotRepo, server: artifactoryServer
  mavenRuntime.resolver releaseRepo: 'repo', snapshotRepo: 'repo', server: artifactoryServer
  mavenRuntime.deployer.deployArtifacts = false
  
  def buildInfo = Artifactory.newBuildInfo()

  env.JAVA_HOME="${tool 'jdk11'}"
  mavenRuntime.run pom: 'pom.xml', goals: 'clean install', buildInfo: buildInfo
  mavenRuntime.deployer.deployArtifacts buildInfo
  artifactoryServer.publishBuildInfo buildInfo

  def distributionConfig = [
    'buildName'             : buildInfo.name,
    'buildNumber'           : buildInfo.number,
    'targetRepo'            : 'revolsys',
    'publish'               : true,
    'overrideExistingFiles' : true,
    'async'                 : true,
    "sourceRepos"           : ["cpf-snapshot-local"],
    'dryRun'                : false
  ]
  artifactoryServer.distribute distributionConfig
}

def checkoutBuild(folderName, pullUrl, refName) {
  dir(folderName) {
    gitCheckoutReference(pullUrl, refName);
    mavenDeploy()
  }
}

node ('master') {

  stage ('Jeometry') {
    checkoutBuild(
      'jeometry',
      'https://github.com/revolsys/cpf-jeometry.git',
      "refs/tags/${versionPrefix}-${version}"
    )
  }

  stage ('Revolsys') {
    checkoutBuild(
      'revolsys',
      'https://github.com/revolsys/cpf-revolsys.git',
      "refs/tags/${versionPrefix}-${version}"
    )
  }

  stage ('CPF') {
    checkoutBuild(
      'revolsys',
      'https://github.com/revolsys/cpf.git',
      "refs/tags/${version}"
    )
  }

  stage ('CPF BCGOV') {
    checkoutBuild(
      'revolsys',
      'https://github.com/revolsys/cpf.git',
      "refs/tags/bcgov-${version}"
    )
  }

}
