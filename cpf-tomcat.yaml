apiVersion: v1
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: cpf-tomcat
      app.kubernetes.io/component: cpf-tomcat
      app.kubernetes.io/instance: cpf-tomcat
    name: cpf-tomcat
  spec:
    host: cpf-tomcat-${NAMESPACE}.apps.silver.devops.gov.bc.ca
    path: /pub/cpf
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: cpf-tomcat
      weight: 100
    wildcardPolicy: None
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: >-
        [{"from":{"kind":"ImageStreamTag","name":"cpf-tomcat:${TAG}","namespace":"${TOOLS_NAMESPACE}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"cpf-tomcat\")].image"}]
    labels:
      app: cpf-tomcat
      app.kubernetes.io/component: cpf-tomcat
      app.kubernetes.io/instance: cpf-tomcat
    name: cpf-tomcat
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: cpf-tomcat
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          deployment: cpf-tomcat
      spec:
        containers:
        - envFrom:
          image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/cpf-tomcat:${TAG}
          imagePullPolicy: IfNotPresent
          name: cpf-tomcat
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "8"
              memory: 6Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: conf-vol
            mountPath: /apps/conf/cpf
          - name: conf-vol
            mountPath: /apps/config/cpf
          - name: cpf-logs
            mountPath: /apps/logs/cpf

          - mountPath: /usr/local/tomcat/logs
            name: cpf-tomcat-vol
          - mountPath: /usr/local/tomcat/work
            name: cpf-tomcat-vol
          - mountPath: /usr/local/tomcat/temp
            name: cpf-tomcat-vol
          - mountPath: /usr/local/tomcat/conf/Catalina
            name: cpf-tomcat-vol

          - name: cpf-repository
            mountPath: /apps/cpf/repository
          - name: geocoder-config
            mountPath: /apps/conf/cpf/BGEO

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: conf-vol
          configMap:
            name: cpf-properties
        - name: geocoder-config
          configMap:
            name: geocoder-properties
        - name: cpf-tomcat-vol
          persistentVolumeClaim:
            claimName: cpf-tomcat-vol
        - name: cpf-repository
          emptyDir: {}
        - name: cpf-logs
          emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: cpf-tomcat
      app.kubernetes.io/component: cpf-tomcat
      app.kubernetes.io/instance: cpf-tomcat
    name: cpf-tomcat
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deployment: cpf-tomcat
    sessionAffinity: None
    type: ClusterIP
- kind: Secret
  apiVersion: v1
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''postgres-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    name: cpf-db
  type: Opaque
  data:
    database-name: Y3Bm
    database-password: Y3BmXzB3bjNy
    database-user: cG9zdGdyZXM=
    postgres-password: UDA1dGdyM3M=
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: cpf-tomcat
    name: cpf-tomcat-vol
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 1Gi
    storageClassName: netapp-file-standard
    volumeMode: Filesystem
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    generation: 1
    labels:
      app: cpf-tomcat
    name: allow-from-openshift-ingress
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    generation: 1
    labels:
      app: cpf-tomcat
    name: allow-same-namespace
  spec:
    ingress:
    - from:
      - podSelector: {}
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    generation: 1
    labels:
      app: cpf-tomcat
    name: deny-by-default
  spec:
    podSelector: {}
    policyTypes:
    - Ingress
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: allow-traffic-from-gateway-cpf
  spec:
    podSelector:
      matchLabels:
        deployment: cpf-tomcat
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                name: 264e6f
    policyTypes:
      - Ingress
kind: Template
parameters:
- name: NAMESPACE
  description: "project namespace"
  value: 988040-test
- name: TOOLS_NAMESPACE
  description: "image managing namespace"
  value: 988040-tools
- name: TAG
  description: "imagestream tags to subscribe to"
  value: test
  required: true
