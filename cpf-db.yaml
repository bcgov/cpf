apiVersion: v1
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    generation: 36
    labels:
      app: cpf-db
    name: cpf-db
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: cpf-db
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          deployment: cpf-db
      spec:
        initContainers:
        - name: init-resources
          env:
          - name: GITHUB_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: loc-tools-repo
          - name: GITHUB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: loc-tools-repo
          image: alpine/git:latest
          command: ['sh', '-c']
          args:
            - cd /var/lib/pgsql/data && if [ -d cpf-db ]; then rm -fr cpf-db; fi;
              path="https://${GITHUB_USER}:${GITHUB_PASS}@github.com/bcgov-dss/loc-tools.git";
              git clone ${path};
              cp -r loc-tools/cpf-db .;
              rm -r loc-tools;
              ln -s cpf-db/sql .;
              mv cpf-db/docker-entrypoint-initdb.d/cpf-install.sh .;
              cp cpf-db/sql/db.properties /apps/cpf/sql/db.properties;
              echo done;
          volumeMounts:
          - name: cpf-db-data
            mountPath: /var/lib/pgsql/data
          - name: cpf-db-data
            mountPath: /apps/cpf
          - name: cpf-db-data
            mountPath: /docker-entrypoint-initdb.d
        containers:
        - env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: cpf-db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: cpf-db
          - name: POSTGRES_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: cpf-db
          - name: PGDATA
            value: /var/lib/pgsql/data/pgdata
          image: docker-remote.artifacts.developer.gov.bc.ca/postgres:13.4
          imagePullPolicy: IfNotPresent
          name: cpf-db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: cpf-db-data
            mountPath: /var/lib/pgsql/data
          - name: cpf-db-data
            mountPath: /apps/cpf
          - name: cpf-db-data
            mountPath: /docker-entrypoint-initdb.d
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: cpf-db-data
          persistentVolumeClaim:
            claimName: cpf-db-vol
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: cpf-db
    name: cpf-db
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deployment: cpf-db
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: cpf-db
    name: cpf-db-vol
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: netapp-file-standard
    volumeMode: Filesystem
- kind: Secret
  apiVersion: v1
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''postgres-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    name: cpf-db
  type: Opaque
  data:
    database-name: Y3Bm
    database-password: Y3BmXzB3bjNy
    database-user: cG9zdGdyZXM=
    postgres-password: UDA1dGdyM3M=
kind: Template
parameters:
- name: NAMESPACE
  description: "project namespace"
  value: 988040-prod
- name: TOOLS_NAMESPACE
  description: "image managing namespace"
  value: 988040-tools
