<?xml version="1.0" encoding="UTF-8" ?>
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    https://www.springframework.org/schema/security/spring-security.xsd
  "
>
  <import resource="classpath:ca/bc/gov/open/cpf/api/domain/api-import.sf.xml" />

  <security:http
    pattern="/css/**"
    security="none" />
  <security:http
    pattern="/images/**"
    security="none" />
  <security:http
    pattern="/js/**"
    security="none" />

  <import resource="classpath*:META-INF/ca/bc/gov/open/cpf/security-module.sf.xml" />

  <security:http
    realm="CPF"
    use-expressions="true"
    auto-config="false"
    entry-point-ref="processingFilterEntryPoint"
    access-decision-manager-ref="accessDecisionManager"

  >
    <security:csrf disabled="true" />
    <security:custom-filter
      after="LOGOUT_FILTER"
      ref="oAuthProcessingFilter" />

    <security:custom-filter
      before="BASIC_AUTH_FILTER"
      ref="digestProcessingFilter" />

    <security:intercept-url
      pattern="/admin/**"
      access="hasRole('ROLE_ADMIN') or hasRoleRegex('ROLE_ADMIN_MODULE_.*')" />
    <security:intercept-url
       pattern="/ws**"
      access="hasRole('ROLE_USER')" />
    <security:intercept-url
      pattern="/ws/**"
      access="hasRole('ROLE_USER')" />
    <security:intercept-url
      pattern="/**"
      access="permitAll" />

    <security:logout
      logout-url="/logout"
      logout-success-url="/" />
    <security:anonymous granted-authority="IS_AUTHENTICATED_ANONYMOUSLY" />
  </security:http>

  <security:authentication-manager>
    <security:authentication-provider user-service-ref="consumerDetailsService">

    </security:authentication-provider>
  </security:authentication-manager>

  <bean
    id="userAccountSecurityService"
    class="ca.bc.gov.open.cpf.api.security.service.UserAccountSecurityService"
    p:dataAccessObject-ref="cpfDataAccessObject" />

  <bean
    id="consumerDetailsService"
    class="ca.bc.gov.open.cpf.api.security.service.UserAccountByConsumerKeyDetailsService"
    p:userAccountSecurityService-ref="userAccountSecurityService" />

  <bean
    id="workerSecurityFilter"
    class="ca.bc.gov.open.cpf.api.web.service.WorkerSecurityFilter"
    p:userDetailsService-ref="consumerDetailsService"
    />

  <bean
    id="oAuthProcessingFilter"
    class="ca.bc.gov.open.cpf.api.security.oauth.OAuthProcessingFilter"
    p:authenticationEntryPoint-ref="processingFilterEntryPoint"
    p:consumerDetailsService-ref="consumerDetailsService"
    lazy-init="true" />

  <bean
    id="digestProcessingFilter"
    class="ca.bc.gov.open.cpf.api.security.digest.DigestAuthenticationFilter"
    p:userDetailsService-ref="consumerDetailsService"
    p:authenticationEntryPoint-ref="processingFilterEntryPoint"
    lazy-init="true" />

  <bean
    id="processingFilterEntryPoint"
    class="ca.bc.gov.open.cpf.api.security.oauth.OAuthOrDigestProcessingFilterEntryPoint"
    p:realmName="CPF"
    p:key="211944fd-bcdc-4774-a5a8-7c904331f6d4"
    p:nonceValiditySeconds="600" />
  <bean
    id="accessDecisionManager"
    class="org.springframework.security.access.vote.UnanimousBased"
  >
    <constructor-arg>
      <list>
        <bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
          <property name="expressionHandler">
            <bean class="com.revolsys.spring.security.DefaultWebSecurityExpressionHandler" />
          </property>
        </bean>
      </list>
    </constructor-arg>
  </bean>
</beans>
